# This is a basic workflow to help you get started with Actions
# Test

name: CI
env:
  AZURE_WEBAPP_NAME: openhackad69qxk8trips
  CONTAINER_REGISTRY: openhackad69qxk8acr.azurecr.io
  RESOURCE_GROUP: openhackad69qxk8rg

defaults:
  run:
    shell: bash
    working-directory: apis/trips
    
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ trips-cd-branch ]
    paths: 
      - apis/trips/**
      - .github/workflows/trips-staging.yml
    
  pull_request:
    branches: [ trips-cd-branch ]
    paths: 
      - apis/trips/**
      - .github/workflows/trips-staging.yml

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-to-registry:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    #    with:
     #     ref: trips-cd-branch
             # Runs a single command using the runners shell

      - name: Run a one-line script
        run: go test
      
      # Create an issue on failure
      - name: Indentify failure and create issue 
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
        with:
          filename : .github/ISSUE_TEMPLATE_custom.md
          
      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: ACR authentication
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}    
      - name: Docker Build & Push to ACR
        run: |
          docker build . -t ${{ env.CONTAINER_REGISTRY }}/devopsoh/api-trips:${{ github.sha }} 
          docker push ${{ env.CONTAINER_REGISTRY }}/devopsoh/api-trips:${{ github.sha }} 
          
  deploy-to-app:
    needs: build-and-push-to-registry
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
                    
      - name: 'Deploy to Azure Web App for Container'
  #      if: github.ref == 'refs/heads/master'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          slot-name: staging
          images: ${{ env.CONTAINER_REGISTRY }}/devopsoh/api-trips:${{ github.sha }}
          
      - name : Check the api payload response
        uses: satak/webrequest-action@master
        with:
            url: https://openhackad69qxk8trips-staging.azurewebsites.net/api/healthcheck/trips
            method: GET
          
      - name: Azure CLI script
        if: success()
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --slot staging --target-slot production
